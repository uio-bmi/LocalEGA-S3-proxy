name: Publish to ghcr.io

on:   
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

env:
  IMAGE_NAME: localega-tsd-proxy

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
           java-version: 13

      - name: Build image with Github Packages Maven artifact
        run: |
          mkdir -p ~/.m2
          echo "<?xml version='1.0' encoding='UTF-8' ?> <settings xmlns='http://maven.apache.org/SETTINGS/1.0.0' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd'> <activeProfiles> <activeProfile>github</activeProfile> </activeProfiles> <profiles> <profile> <id>github</id> <repositories> <repository> <id>central</id> <url>https://repo1.maven.org/maven2</url> </repository> <repository> <id>github-uio-bmi-TSD-File-API-client</id> <url>https://maven.pkg.github.com/uio-bmi/TSD-File-API-client</url> <snapshots> <enabled>true</enabled> </snapshots> </repository> </repositories> </profile> </profiles> <servers> <server> <id>github-uio-bmi-TSD-File-API-client</id> <username>${{ secrets.GH_PACKAGES_USERNAME }}</username> <password>${{ secrets.GH_PACKAGES_TOKEN }}</password> </server> </servers> </settings>" > ~/.m2/settings.xml
          docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log in to registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
